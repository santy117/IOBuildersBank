openapi: 3.0.0

info:
  version: 0.0.1
  title: Hex Architecture
  description: Hex Architecture

servers:
  - url: http://localhost:8080/
    description: API location

tags:
  - name: "user"
  - name: "wallet"


paths:
  /user:
    post:
      summary: Creates a new user.
      tags:
        - "user"
      description: Creates a new user.
      operationId: postUser
      requestBody:
        description: description
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreationDTO'
      responses:
        "201":
          description: CREATED
        "400":
          description: BAD REQUEST
        "401":
          description: UNAUTH
  /user/{id}:
    parameters:
      - name: id
        description: id of the user
        schema:
          type: integer
          format: int64
        in: path
        required: true
    get:
      summary: Returns user for a specified id.
      tags:
        - "user"
      description: Returns user for a specified id.
      operationId: getUserById
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDTO'
        "400":
          description: BAD REQUEST
        "401":
          description: UNAUTH
  /wallet:
    post:
      summary: Creates a new wallet.
      tags:
        - "wallet"
      description: Creates a new wallet.
      operationId: postWallet
      parameters:
        - name: userId
          description: id of the user
          schema:
            type: integer
            format: int64
          in: query
          required: true
        - name: name
          description: name of the wallet
          schema:
            type: string
          in: query
          required: true
      responses:
        "201":
          description: CREATED
        "400":
          description: BAD REQUEST
        "401":
          description: UNAUTH
  /wallet/{id}:
    parameters:
      - name: id
        description: id of the wallet
        schema:
          type: integer
          format: int64
        in: path
        required: true
    get:
      summary: Get wallet info
      tags:
        - "wallet"
      description: Get wallet info
      operationId: getWalletId
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WalletDTO'
        "400":
          description: BAD REQUEST
        "401":
          description: UNAUTH
  /wallet/{id}/deposit:
    parameters:
      - name: id
        description: id of the wallet
        schema:
          type: integer
          format: int64
        in: path
        required: true
    post:
      summary: Creates a deposit
      tags:
        - "wallet"
      description: Creates a new deposit.
      operationId: postWalletDeposit
      parameters:
        - name: amount
          description: amount
          schema:
            type: number
          in: query
          required: true
        - name: description
          description: description
          schema:
            type: string
          in: query
          required: false
      responses:
        "200":
          description: OK
        "400":
          description: BAD REQUEST
        "401":
          description: UNAUTH
  /wallet/{id}/transfer:
    parameters:
      - name: id
        description: id of the wallet
        schema:
          type: integer
          format: int64
        in: path
        required: true
    post:
      summary: Creates a deposit
      tags:
        - "wallet"
      description: Creates a new deposit.
      operationId: postWalletTransfer
      parameters:
        - name: targetId
          description: target wallet id
          schema:
            type: integer
            format: int64
          in: query
          required: true
        - name: amount
          description: amount
          schema:
            type: number
          in: query
          required: true
        - name: description
          description: description
          schema:
            type: string
          in: query
          required: false
      responses:
        "200":
          description: OK
        "400":
          description: BAD REQUEST
        "401":
          description: UNAUTH

components:

  schemas:
    UserCreationDTO:
      description: This is the user creation model
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        email:
          type: string
    UserDTO:
      description: This is the user dto model
      type: object
      properties:
        username:
          type: string
        id:
          type: integer
          format: int64
        wallets:
          type: array
          items:
            $ref: '#/components/schemas/WalletDTO'
    WalletDTO:
      description: This is the wallet dto model
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        balance:
          type: number
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/TransactionDTO'
    TransactionDTO:
      description: This is the transaction dto model
      type: object
      properties:
        id:
          type: integer
          format: int64
        description:
          type: string
        date:
          type: string
        amount:
          type: number